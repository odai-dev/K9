"""Initial migration with UUID primary keys and normalized models

Revision ID: dfb158aaf335
Revises: 
Create Date: 2025-09-06 18:38:06.910741

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dfb158aaf335'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('recorded_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('cleaning_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('daily_checkup_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('deworming_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
        batch_op.create_index('idx_dog_birth_date', ['birth_date'], unique=False)
        batch_op.create_index('idx_dog_gender_status', ['gender', 'current_status'], unique=False)
        batch_op.create_index('idx_dog_status_breed', ['current_status', 'breed'], unique=False)

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
        batch_op.alter_column('user_account_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
        batch_op.create_index('idx_employee_email', ['email'], unique=False)
        batch_op.create_index('idx_employee_role_active', ['role', 'is_active'], unique=False)

    with op.batch_alter_table('excretion_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('feeding_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('grooming_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)

    with op.batch_alter_table('permission_audit_logs', schema=None) as batch_op:
        batch_op.alter_column('changed_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('target_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('project_attendance', schema=None) as batch_op:
        batch_op.alter_column('recorded_by_user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('project_manager_permission', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('sub_permissions', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))

    with op.batch_alter_table('sub_permissions', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('project_manager_permission', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('project_attendance', schema=None) as batch_op:
        batch_op.alter_column('recorded_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('permission_audit_logs', schema=None) as batch_op:
        batch_op.alter_column('target_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('changed_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('grooming_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('feeding_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('excretion_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index('idx_employee_role_active')
        batch_op.drop_index('idx_employee_email')
        batch_op.alter_column('user_account_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.drop_index('idx_dog_status_breed')
        batch_op.drop_index('idx_dog_gender_status')
        batch_op.drop_index('idx_dog_birth_date')
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('deworming_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('daily_checkup_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('cleaning_log', schema=None) as batch_op:
        batch_op.alter_column('created_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('recorded_by_user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
