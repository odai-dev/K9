Task:
In the PDF reports generated by the K9 system, make the first column a serial number labeled "رقم" (Arabic), and ensure column order in the PDF matches the preview. Apply this to all report types (dogs, employees, training, veterinary, breeding, projects). Do not reverse rows for RTL; keep data in the same order as the preview and only control alignment per cell.

Requirements

Column order

First header cell must be "رقم".

Each data row begins with the row index starting at 1.

Keep the rest of the columns in the same order as the web preview.

RTL/LTR & fonts

Use Arabic font (e.g., Amiri) for Arabic cells and a Latin font (e.g., DejaVuSans) for codes/emails.

Do not reshape Latin segments. Reshape Arabic segments only.

Paragraph alignment: Arabic cells RIGHT, Latin cells LEFT.

Do not reverse arrays (row[::-1]) in PDF generation.

Applies to all reports

Dogs, Employees, Training, Veterinary, Breeding, Projects.

Each report’s table header and rows must prepend "رقم".

Optional but recommended

Set explicit colWidths so PDF matches preview proportions.

Keep header styling (colored band, white text) unchanged.

Patch pattern (use across all report builders)

Register fonts once (already done if you added Arabic support). Use helpers for shaping and paragraph creation:

# utils.py (top-level imports / helpers)
import re
import arabic_reshaper
from bidi.algorithm import get_display
from reportlab.platypus import Paragraph, Table, TableStyle
from reportlab.lib.styles import ParagraphStyle
from reportlab.lib import colors
from reportlab.lib.units import mm

ARABIC_RE = re.compile(r'[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF]+')
reshaper = arabic_reshaper.ArabicReshaper({'delete_harakat': False, 'support_ligatures': True})

def shape_mixed(txt: str) -> str:
    if not txt:
        return ''
    def _reshape(m): return reshaper.reshape(m.group(0))
    reshaped = ARABIC_RE.sub(_reshape, txt)
    return get_display(reshaped, base_dir='R')

STYLE_AR_R = ParagraphStyle('AR_R', fontName='Amiri', fontSize=10, alignment=2)  # RIGHT
STYLE_LTR  = ParagraphStyle('LTR',  fontName='DejaVuSans', fontSize=10, alignment=0)  # LEFT
STYLE_HDR  = ParagraphStyle('HDR',  fontName='Amiri', fontSize=11, alignment=2, textColor=colors.whitesmoke)

def para_ar(v): return Paragraph(shape_mixed('' if v is None else str(v)), STYLE_AR_R)
def para_ltr(v): return Paragraph('' if v is None else str(v), STYLE_LTR)
def hdr(text_ar): return Paragraph(shape_mixed(text_ar), STYLE_HDR)

Example: Dogs report table (apply the same pattern to other reports)
def build_dogs_table(dogs):
    # 1) Header with "رقم" FIRST
    header = [
        hdr('رقم'),
        hdr('اسم الكلب'),
        hdr('الكود'),
        hdr('السلالة'),
        hdr('الجنس'),
        hdr('الحالة'),
        hdr('الموقع'),
    ]

    # 2) Rows: index first, then fields (NO reversing)
    rows = [header]
    for i, d in enumerate(dogs, start=1):
        gender_ar = 'ذكر' if d.gender.value == 'MALE' else 'أنثى'
        status_ar = {
            'ACTIVE':'نشط','RETIRED':'متقاعد','DECEASED':'متوفى','TRAINING':'تدريب'
        }.get(d.current_status.value, d.current_status.value)

        rows.append([
            para_ltr(i),                      # "رقم" as first column
            para_ar(d.name or ''),
            para_ltr(d.code or ''),           # codes are LTR
            para_ar(d.breed or ''),
            para_ar(gender_ar),
            para_ar(status_ar),
            para_ar(d.location or ''),
        ])

    # 3) Build table with fixed column widths (adjust as needed)
    col_widths = [12*mm, 35*mm, 25*mm, 30*mm, 18*mm, 25*mm, 30*mm]
    table = Table(rows, repeatRows=1, colWidths=col_widths)
    table.setStyle(TableStyle([
        ('BACKGROUND', (0,0), (-1,0), colors.HexColor('#603913')),
        ('GRID', (0,0), (-1,-1), 0.5, colors.HexColor('#603913')),
        ('VALIGN', (0,0), (-1,-1), 'MIDDLE'),
        # Optional: ensure code/number columns left-align (Paragraph styles already handle it)
        ('ALIGN', (0,1), (0,-1), 'LEFT'),  # رقم
        ('ALIGN', (2,1), (2,-1), 'LEFT'),  # الكود
    ]))
    return table

Apply the same structure to other report types

Employees: ['رقم','الاسم','الرقم الوظيفي','الوظيفة','تاريخ التعيين','الحالة','الهاتف','البريد']

Training: ['رقم','اسم الكلب','المدرب','الفئة','الموضوع','التاريخ','المدة (دقيقة)','التقييم']

Veterinary: ['رقم','الكلب','الطبيب','نوع الزيارة','التاريخ','التشخيص','العلاج']

Breeding: ['رقم','الأم','الأب','نوع الدورة','تاريخ التزاوج','تاريخ الولادة المتوقع','تاريخ الولادة','النتيجة','عدد الجراء','الناجون']

Projects: ['رقم','اسم المشروع','الكود','الحالة','تاريخ البداية','تاريخ النهاية','المدير','الموقع']

For each, prepend para_ltr(i) as the first cell in every data row and use hdr('رقم') as the first header.

Acceptance Criteria

In every PDF, the first column header is "رقم", and rows are numbered starting at 1.

No column order reversal is used; PDF column order matches the preview.

Arabic cells display correctly; English codes/emails remain visible.

Alignment: Arabic RIGHT, Latin LEFT.

All report types updated consistently.

Make these changes and verify the downloaded PDFs now show "رقم" as the first column, with the same column order as the preview.